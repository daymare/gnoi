// This file defines a gNOI API used for factory reseting a Target.
syntax = "proto3";

package gnoi.factory_reset;

import "github.com/openconfig/gnoi/types/types.proto";

option go_package = "github.com/openconfig/gnoi/factory_reset";

option (types.gnoi_version) = "0.1.0";

// The FactoryReset service exported by Targets.
service FactoryReset {
  // The Start RPC allows the Client to instruct the Target to immediately
  // clean all existing state and boot the Target in the same condition as it is
  // shipped from factory. State includes storage, configuration, logs,
  // certificates and licenses.
  //
  // Optionally allows rolling back the OS to the same version shipped from
  // factory.
  //
  // Optionally allows for the Target to zero-fill permanent storage where state
  // data is stored.
  //
  // Optionally allows for the Target to skip DHCP boot and populate with the
  // provided management configuration.
  //
  // If any of the optional flags is set but not supported, a gRPC Status with
  // code INVALID_ARGUMENT must be returned with the details value set to a
  // properly populated ResetError message.
  rpc Start(StartRequest) returns (StartResponse);
}

message StartRequest {
  // Instructs the Target to rollback the OS to the same version as it shipped
  // from factory.
  bool factory_os = 1;
  // Instructs the Target to zero fill persistent storage state data.
  bool zero_fill = 2;
  // Instructs the Target to retain certificates.
  bool retain_certs = 3;
  // Instructs the Target to populate with the provided Ip/Routing information
  // and skip DHCP boot.
  ManagementConfig mgmt_config = 4;
}

message ManagementConfig {
  repeated string boot_server_uris = 1;
  string device_ip = 2;
  string mask_length = 3;
  string gateway_ip = 4;
  repeated string management_routes = 5;
  repeated string dns_servers = 6;
}

message ResetSuccess {
}

// Message also used in gRPC status.details field.
message ResetError {
  // Factory OS reset is not supported.
  bool factory_os_unsupported = 1;
  // Zero fill is not supported.
  bool zero_fill_unsupported = 2;
  // Management config is not supported.
  bool mgmt_config_unsupported = 5;
  // Unspecified error, must provide detail message.
  bool other = 3;
  string detail = 4;
}

message StartResponse {
  oneof response {
    // Reset will be executed.
    ResetSuccess reset_success = 1;
    // Reset will not be executed.
    ResetError reset_error = 2;
  }
}
